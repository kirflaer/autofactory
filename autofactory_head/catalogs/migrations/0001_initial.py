# Generated by Django 3.2 on 2021-10-21 13:20

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('name', models.CharField(max_length=1024, verbose_name='Наименование')),
                ('guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('external_key', models.CharField(blank=True, max_length=36, verbose_name='Внешний ключ')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('name', models.CharField(max_length=1024, verbose_name='Наименование')),
                ('guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('mode', models.CharField(choices=[('AUTO_SCANNER', 'AUTO_SCANNER'), ('TABLET', 'TABLET'), ('DCT', 'DCT')], default='DCT', max_length=255)),
                ('identifier', models.CharField(blank=True, max_length=50, null=True, verbose_name='IP')),
                ('port', models.PositiveIntegerField(blank=True, null=True)),
                ('polling_interval', models.PositiveIntegerField(blank=True, null=True, verbose_name='Интервал опроса')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Line',
            fields=[
                ('name', models.CharField(max_length=1024, verbose_name='Наименование')),
                ('guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='catalogs.department', verbose_name='Подразделение')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('name', models.CharField(max_length=1024, verbose_name='Наименование')),
                ('guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('external_key', models.CharField(blank=True, max_length=36, verbose_name='Внешний ключ')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('name', models.CharField(max_length=1024, verbose_name='Наименование')),
                ('guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('external_key', models.CharField(blank=True, max_length=36, verbose_name='Внешний ключ')),
                ('gtin', models.CharField(blank=True, default='', max_length=50)),
                ('expiration_date', models.PositiveIntegerField(default=0, verbose_name='Срок годности')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Storage',
            fields=[
                ('name', models.CharField(max_length=1024, verbose_name='Наименование')),
                ('guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('external_key', models.CharField(blank=True, max_length=36, verbose_name='Внешний ключ')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('name', models.CharField(max_length=1024, verbose_name='Наименование')),
                ('guid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('external_key', models.CharField(blank=True, max_length=36, verbose_name='Внешний ключ')),
                ('count_in_pallet', models.PositiveIntegerField(default=0, verbose_name='Количество в паллете')),
                ('capacity', models.PositiveIntegerField(default=0, verbose_name='Вместимость')),
                ('is_default', models.BooleanField(default=False, verbose_name='Упаковка по умолчанию')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='units', to='catalogs.product', verbose_name='Номенклатура')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LineProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('line', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='catalogs.line', verbose_name='Линия')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='catalogs.product', verbose_name='Номенклатура')),
            ],
        ),
        migrations.CreateModel(
            name='LineDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='catalogs.device', verbose_name='Устройство')),
                ('line', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='catalogs.line', verbose_name='Линия')),
            ],
        ),
        migrations.AddField(
            model_name='line',
            name='devices',
            field=models.ManyToManyField(through='catalogs.LineDevice', to='catalogs.Device'),
        ),
        migrations.AddField(
            model_name='line',
            name='products',
            field=models.ManyToManyField(through='catalogs.LineProduct', to='catalogs.Product'),
        ),
        migrations.AddField(
            model_name='line',
            name='storage',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='catalogs.storage', verbose_name='Склад'),
        ),
        migrations.AddConstraint(
            model_name='lineproduct',
            constraint=models.UniqueConstraint(fields=('line', 'product'), name='unique_products'),
        ),
        migrations.AddConstraint(
            model_name='linedevice',
            constraint=models.UniqueConstraint(fields=('line', 'device'), name='unique_devices'),
        ),
    ]
